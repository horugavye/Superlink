# Generated by Django 5.0.1 on 2025-06-22 16:30

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StoryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(default='#6366f1', max_length=20)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'story_tags',
                'ordering': ['-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('image', 'Image Story'), ('video', 'Video Story'), ('audio', 'Audio Story'), ('text', 'Text Story'), ('poll', 'Poll Story'), ('location', 'Location Story'), ('timecapsule', 'Time Capsule'), ('collaborative', 'Collaborative Story'), ('ai-remix', 'AI Remix'), ('story-thread', 'Story Thread')], default='image', max_length=20)),
                ('content', models.TextField()),
                ('theme', models.CharField(choices=[('personal', 'Personal'), ('travel', 'Travel'), ('food', 'Food & Dining'), ('art', 'Art & Creativity'), ('wellness', 'Wellness'), ('social', 'Social')], default='personal', max_length=20)),
                ('media_url', models.URLField(blank=True, null=True)),
                ('media_file', models.FileField(blank=True, null=True, upload_to='stories/media/')),
                ('duration', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(300)])),
                ('location_name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('unlock_date', models.DateTimeField(blank=True, null=True)),
                ('is_unlocked', models.BooleanField(default=True)),
                ('thread_id', models.UUIDField(blank=True, null=True)),
                ('thread_title', models.CharField(blank=True, max_length=255, null=True)),
                ('thread_order', models.IntegerField(default=0)),
                ('ai_style', models.CharField(blank=True, max_length=100, null=True)),
                ('ai_filters', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True)),
                ('allow_comments', models.BooleanField(default=True)),
                ('allow_sharing', models.BooleanField(default=True)),
                ('views_count', models.IntegerField(default=0)),
                ('comments_count', models.IntegerField(default=0)),
                ('shares_count', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('total_ratings', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to=settings.AUTH_USER_MODEL)),
                ('original_story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remixes', to='stories.story')),
                ('parent_story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_stories', to='stories.story')),
            ],
            options={
                'db_table': 'stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.IntegerField(default=0)),
                ('unique_views', models.IntegerField(default=0)),
                ('avg_view_duration', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('engagement_rate', models.FloatField(default=0.0)),
                ('shares_count', models.IntegerField(default=0)),
                ('comments_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('story', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='stories.story')),
            ],
            options={
                'db_table': 'story_analytics',
            },
        ),
        migrations.CreateModel(
            name='StoryBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_bookmarks',
            },
        ),
        migrations.CreateModel(
            name='StoryCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(default='contributor', max_length=50)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('can_edit', models.BooleanField(default=True)),
                ('can_delete', models.BooleanField(default=False)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborators', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborated_stories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_collaborators',
            },
        ),
        migrations.CreateModel(
            name='StoryComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='stories.storycomment')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('comment', 'Comment'), ('share', 'Share'), ('view', 'View'), ('rate', 'Rate'), ('poll_vote', 'Poll Vote')], max_length=20)),
                ('value', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_interactions',
            },
        ),
        migrations.CreateModel(
            name='StoryInteractive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('poll', 'Poll'), ('quiz', 'Quiz'), ('game', 'Game')], default='poll', max_length=20)),
                ('options', models.JSONField(default=list)),
                ('correct_answer', models.IntegerField(blank=True, null=True)),
                ('settings', models.JSONField(default=dict)),
                ('story', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='interactive', to='stories.story')),
            ],
            options={
                'db_table': 'story_interactives',
            },
        ),
        migrations.CreateModel(
            name='StoryRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_ratings',
            },
        ),
        migrations.CreateModel(
            name='StoryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate Content'), ('spam', 'Spam'), ('harassment', 'Harassment'), ('copyright', 'Copyright Violation'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_reports', to=settings.AUTH_USER_MODEL)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='stories.story')),
            ],
            options={
                'db_table': 'story_reports',
            },
        ),
        migrations.CreateModel(
            name='StoryShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_shares',
            },
        ),
        migrations.CreateModel(
            name='StoryView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('view_duration', models.IntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='stories.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'story_views',
            },
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['author', 'created_at'], name='stories_author__1f9446_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['type', 'theme'], name='stories_type_7eec7e_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['thread_id', 'thread_order'], name='stories_thread__d7bfa1_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['unlock_date'], name='stories_unlock__b97ef6_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['is_active', 'is_public'], name='stories_is_acti_8a8855_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storybookmark',
            unique_together={('story', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='storycollaborator',
            unique_together={('story', 'user')},
        ),
        migrations.AddIndex(
            model_name='storyinteraction',
            index=models.Index(fields=['story', 'interaction_type'], name='story_inter_story_i_6a0162_idx'),
        ),
        migrations.AddIndex(
            model_name='storyinteraction',
            index=models.Index(fields=['user', 'interaction_type'], name='story_inter_user_id_b6a0d8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storyinteraction',
            unique_together={('story', 'user', 'interaction_type')},
        ),
        migrations.AlterUniqueTogether(
            name='storyrating',
            unique_together={('story', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='storyreport',
            unique_together={('story', 'reporter')},
        ),
        migrations.AlterUniqueTogether(
            name='storyview',
            unique_together={('story', 'user')},
        ),
    ]
